package com.springboot.service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.springboot.dto.VentaDto;
import com.springboot.entity.DetalleVentaEntity;
import com.springboot.entity.VentaEntity;
import com.springboot.repository.VentaRepository;

import jakarta.transaction.Transactional;

@Service
@Transactional
public class VentaService 
{
	@Autowired
    private VentaRepository ventaRepository;

	
	public VentaDto registrarVenta(VentaDto ventaDto) {
        VentaEntity venta = convertirADto(ventaDto);
        venta = ventaRepository.save(venta);
        return convertirADto(venta);
    }

    public List<VentaDto> listarVentas() {
        return ventaRepository.findAll().stream()
            .map(this::convertirADto)
            .collect(Collectors.toList());
    }

    private VentaEntity convertirADto(VentaDto ventaDto) {
        VentaEntity venta = new VentaEntity();
        venta.setIdVenta(ventaDto.getIdVenta());
        venta.setFechaVenta(ventaDto.getFechaVenta());
        venta.setTotalVenta(ventaDto.getTotalVenta());
        // Manejar la conversión de detalles de venta si es necesario
        return venta;
    }

    private VentaDto convertirADto(VentaEntity venta) {
        VentaDto dto = new VentaDto();
        dto.setIdVenta(venta.getIdVenta());
        dto.setFechaVenta(venta.getFechaVenta());
        dto.setTotalVenta(venta.getTotalVenta());
        // Manejar la conversión de detalles de venta si es necesario
        return dto;
    }
}
